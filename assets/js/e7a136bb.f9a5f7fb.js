"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[226],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(m,s(s({ref:n},c),{},{components:t})):r.createElement(m,s({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6856:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),s=["components"],i={title:"Non Personalized Ads"},u=void 0,l={unversionedId:"usage/npa",id:"usage/npa",isDocsHomePage:!1,title:"Non Personalized Ads",description:"To load non-personalized ads only, set requestNonPersonalizedAdsOnly to true in RequestOptions for your ads.",source:"@site/docs/usage/npa.mdx",sourceDirName:"usage",slug:"/usage/npa",permalink:"/admob/docs/usage/npa",editUrl:"https://github.com/react-native-admob/admob/edit/master/docs/docs/usage/npa.mdx",tags:[],version:"current",frontMatter:{title:"Non Personalized Ads"},sidebar:"docsSidebar",previous:{title:"Setup App Open Ad",permalink:"/admob/docs/usage/appopen"},next:{title:"Removing ads conditionally",permalink:"/admob/docs/usage/remove-ads"}},c=[],p={toc:c};function d(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To load non-personalized ads only, set ",(0,a.kt)("inlineCode",{parentName:"p"},"requestNonPersonalizedAdsOnly")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," in ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types/RequestOptions"},"RequestOptions")," for your ads."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=Hook",title:"Hook"},"const requestOptions = {\n  requestNonPersonalizedAdsOnly: true,\n};\n\nconst rewardedAd = useRewardedAd(UNIT_ID_REWARDED, {\n  requestOptions,\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=Class",title:"Class"},"const requestOptions = {\n  requestNonPersonalizedAdsOnly: true,\n};\n\n// Requesting npa only in class instance (only for this request)\ninterstitialAd\n  .requestAd(requestOptions)\n  .catch((e: Error) => setAdLoadError(e))\n  .then(() => setAdLoaded(true));\n\n// Requesting npa only in class instance (for all requests in this ad instance)\ninterstitialAd.setRequestOptions(requestOptions);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=BannerAd",title:"BannerAd"},"const requestOptions = {\n  requestNonPersonalizedAdsOnly: true,\n};\n\n<BannerAd\n  size={BannerAdSize.BANNER}\n  unitId={UNIT_ID_BANNER}\n  requestOptions={requestOptions}\n/>;\n")))}d.isMDXComponent=!0}}]);